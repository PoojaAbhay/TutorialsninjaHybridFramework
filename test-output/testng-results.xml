<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-09T23:53:08 EDT" name="Tutorials Ninja Automation Suit" finished-at="2023-07-09T23:55:56 EDT" duration-ms="168376">
    <groups>
    </groups>
    <test started-at="2023-07-09T23:53:08 EDT" name="Tutorials Ninja Test cases" finished-at="2023-07-09T23:55:56 EDT" duration-ms="168376">
      <class name="com.tutorialsninja.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:16 EDT" name="setup" finished-at="2023-07-09T23:55:27 EDT" duration-ms="10769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithMandatoryField()[pri:1, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:27 EDT" name="VerifyRegisterwithMandatoryField" finished-at="2023-07-09T23:55:28 EDT" duration-ms="1242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithMandatoryField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:28 EDT" name="Closure" finished-at="2023-07-09T23:55:28 EDT" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:28 EDT" name="setup" finished-at="2023-07-09T23:55:43 EDT" duration-ms="14259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithAllField()[pri:2, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:43 EDT" name="VerifyRegisterwithAllField" finished-at="2023-07-09T23:55:44 EDT" duration-ms="1132" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, findElement {using=xpath, value=//ul[@class="breadcrumb"]//a[text()="Success"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\visit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55980/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, findElement {using=xpath, value=//ul[@class="breadcrumb"]//a[text()="Success"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\visit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55980/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at com.tutorialsninja.qa.pages.AccountPage.accountCreatedmessage(AccountPage.java:28)
at com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField(RegisterTest.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithAllField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:44 EDT" name="Closure" finished-at="2023-07-09T23:55:44 EDT" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method signature="VerifyRegisterwithDuplicateEmail()[pri:3, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:44 EDT" name="VerifyRegisterwithDuplicateEmail" finished-at="2023-07-09T23:55:44 EDT" depends-on-methods="com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithDuplicateEmail() on instance com.tutorialsninja.qa.testcases.RegisterTest@183ec003 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField() on instance com.tutorialsninja.qa.testcases.RegisterTest@183ec003]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithDuplicateEmail() on instance com.tutorialsninja.qa.testcases.RegisterTest@183ec003 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField() on instance com.tutorialsninja.qa.testcases.RegisterTest@183ec003]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithDuplicateEmail -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:44 EDT" name="setup" finished-at="2023-07-09T23:55:55 EDT" duration-ms="11322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithoutField()[pri:4, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:55 EDT" name="VerifyRegisterwithoutField" finished-at="2023-07-09T23:55:56 EDT" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithoutField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@183ec003]" started-at="2023-07-09T23:55:56 EDT" name="Closure" finished-at="2023-07-09T23:55:56 EDT" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.RegisterTest -->
      <class name="com.tutorialsninja.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:20 EDT" name="setup" finished-at="2023-07-09T23:54:47 EDT" duration-ms="27623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithExistingProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:47 EDT" name="VerifySearchwithExistingProductName" finished-at="2023-07-09T23:54:48 EDT" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithExistingProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:48 EDT" name="Closure" finished-at="2023-07-09T23:54:48 EDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:48 EDT" name="setup" finished-at="2023-07-09T23:54:59 EDT" duration-ms="10232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithInvalidProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:59 EDT" name="VerifySearchwithInvalidProductName" finished-at="2023-07-09T23:54:59 EDT" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithInvalidProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:59 EDT" name="Closure" finished-at="2023-07-09T23:54:59 EDT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:54:59 EDT" name="setup" finished-at="2023-07-09T23:55:16 EDT" duration-ms="16189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithoutProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:55:16 EDT" name="VerifySearchwithoutProductName" finished-at="2023-07-09T23:55:16 EDT" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithoutProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@31ea9581]" started-at="2023-07-09T23:55:16 EDT" name="Closure" finished-at="2023-07-09T23:55:16 EDT" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.SearchTest -->
      <class name="com.tutorialsninja.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:08 EDT" name="setup" finished-at="2023-07-09T23:53:18 EDT" duration-ms="9634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:18 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-09T23:53:19 EDT" duration-ms="893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TESTPOOJA@YOPMAIL.COM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:19 EDT" name="Closure" finished-at="2023-07-09T23:53:19 EDT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:19 EDT" name="setup" finished-at="2023-07-09T23:53:33 EDT" duration-ms="13568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:33 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-09T23:53:34 EDT" duration-ms="878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abhay@yopmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:34 EDT" name="Closure" finished-at="2023-07-09T23:53:34 EDT" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:34 EDT" name="setup" finished-at="2023-07-09T23:53:43 EDT" duration-ms="9185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:43 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-09T23:53:44 EDT" duration-ms="862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PoojaAbhay@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:44 EDT" name="Closure" finished-at="2023-07-09T23:53:44 EDT" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:44 EDT" name="setup" finished-at="2023-07-09T23:53:52 EDT" duration-ms="8222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithInvalidcredentials()[pri:2, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:52 EDT" name="VerifylogingwithInvalidcredentials" finished-at="2023-07-09T23:53:53 EDT" duration-ms="557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithInvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:53 EDT" name="Closure" finished-at="2023-07-09T23:53:53 EDT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:53:53 EDT" name="setup" finished-at="2023-07-09T23:54:01 EDT" duration-ms="8323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithInvalidEmailValidPassword()[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:01 EDT" name="VerifylogingwithInvalidEmailValidPassword" finished-at="2023-07-09T23:54:02 EDT" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithInvalidEmailValidPassword -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:02 EDT" name="Closure" finished-at="2023-07-09T23:54:02 EDT" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:02 EDT" name="setup" finished-at="2023-07-09T23:54:10 EDT" duration-ms="8252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithValidEmailInvalidPassword()[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:10 EDT" name="VerifylogingwithValidEmailInvalidPassword" finished-at="2023-07-09T23:54:11 EDT" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithValidEmailInvalidPassword -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:11 EDT" name="Closure" finished-at="2023-07-09T23:54:11 EDT" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:11 EDT" name="setup" finished-at="2023-07-09T23:54:19 EDT" duration-ms="8240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithoutCredentials()[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:19 EDT" name="VerifylogingwithoutCredentials" finished-at="2023-07-09T23:54:20 EDT" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithoutCredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@cb0755b]" started-at="2023-07-09T23:54:20 EDT" name="Closure" finished-at="2023-07-09T23:54:20 EDT" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.LoginTest -->
    </test> <!-- Tutorials Ninja Test cases -->
  </suite> <!-- Tutorials Ninja Automation Suit -->
</testng-results>
