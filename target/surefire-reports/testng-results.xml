<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-10T12:14:16 EDT" name="Tutorials Ninja Automation Suit" finished-at="2023-07-10T12:17:06 EDT" duration-ms="170248">
    <groups>
    </groups>
    <test started-at="2023-07-10T12:14:16 EDT" name="Tutorials Ninja Test cases" finished-at="2023-07-10T12:17:06 EDT" duration-ms="170248">
      <class name="com.tutorialsninja.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:18 EDT" name="setup" finished-at="2023-07-10T12:16:35 EDT" duration-ms="17136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithMandatoryField()[pri:1, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:35 EDT" name="VerifyRegisterwithMandatoryField" finished-at="2023-07-10T12:16:37 EDT" duration-ms="1836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithMandatoryField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:37 EDT" name="Closure" finished-at="2023-07-10T12:16:37 EDT" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:37 EDT" name="setup" finished-at="2023-07-10T12:16:49 EDT" duration-ms="12086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithAllField()[pri:2, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:49 EDT" name="VerifyRegisterwithAllField" finished-at="2023-07-10T12:16:51 EDT" duration-ms="1770" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, findElement {using=xpath, value=//ul[@class="breadcrumb"]//a[text()="Success"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\visit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52038}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52038/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, findElement {using=xpath, value=//ul[@class="breadcrumb"]//a[text()="Success"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\visit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52038}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52038/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.isDisplayed(Unknown Source)
at com.tutorialsninja.qa.pages.AccountPage.accountCreatedmessage(AccountPage.java:28)
at com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField(RegisterTest.java:83)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithAllField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:51 EDT" name="Closure" finished-at="2023-07-10T12:16:51 EDT" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method signature="VerifyRegisterwithDuplicateEmail()[pri:3, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:52 EDT" name="VerifyRegisterwithDuplicateEmail" finished-at="2023-07-10T12:16:52 EDT" depends-on-methods="com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithDuplicateEmail() on instance com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField() on instance com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithDuplicateEmail() on instance com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.RegisterTest.VerifyRegisterwithAllField() on instance com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithDuplicateEmail -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:16:52 EDT" name="setup" finished-at="2023-07-10T12:17:05 EDT" duration-ms="13625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisterwithoutField()[pri:4, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:17:05 EDT" name="VerifyRegisterwithoutField" finished-at="2023-07-10T12:17:06 EDT" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisterwithoutField -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@2a3b5b47]" started-at="2023-07-10T12:17:06 EDT" name="Closure" finished-at="2023-07-10T12:17:06 EDT" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.RegisterTest -->
      <class name="com.tutorialsninja.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:15:43 EDT" name="setup" finished-at="2023-07-10T12:15:54 EDT" duration-ms="10501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithExistingProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:15:54 EDT" name="VerifySearchwithExistingProductName" finished-at="2023-07-10T12:15:55 EDT" duration-ms="965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithExistingProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:15:55 EDT" name="Closure" finished-at="2023-07-10T12:15:55 EDT" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:15:55 EDT" name="setup" finished-at="2023-07-10T12:16:07 EDT" duration-ms="11811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithInvalidProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:16:07 EDT" name="VerifySearchwithInvalidProductName" finished-at="2023-07-10T12:16:08 EDT" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithInvalidProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:16:08 EDT" name="Closure" finished-at="2023-07-10T12:16:08 EDT" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:16:08 EDT" name="setup" finished-at="2023-07-10T12:16:17 EDT" duration-ms="8943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifySearchwithoutProductName()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:16:17 EDT" name="VerifySearchwithoutProductName" finished-at="2023-07-10T12:16:17 EDT" duration-ms="638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchwithoutProductName -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@38d8f54a]" started-at="2023-07-10T12:16:17 EDT" name="Closure" finished-at="2023-07-10T12:16:18 EDT" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.SearchTest -->
      <class name="com.tutorialsninja.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:17 EDT" name="setup" finished-at="2023-07-10T12:14:29 EDT" duration-ms="11371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:29 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-10T12:14:30 EDT" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TESTPOOJA@YOPMAIL.COM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:30 EDT" name="Closure" finished-at="2023-07-10T12:14:30 EDT" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:30 EDT" name="setup" finished-at="2023-07-10T12:14:44 EDT" duration-ms="13518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:44 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-10T12:14:45 EDT" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abhay@yopmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:45 EDT" name="Closure" finished-at="2023-07-10T12:14:45 EDT" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:45 EDT" name="setup" finished-at="2023-07-10T12:14:55 EDT" duration-ms="10146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verifylogingwithvalidcredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:55 EDT" name="Verifylogingwithvalidcredentials" data-provider="DataSupplier" finished-at="2023-07-10T12:14:57 EDT" duration-ms="1293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PoojaAbhay@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verifylogingwithvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:57 EDT" name="Closure" finished-at="2023-07-10T12:14:57 EDT" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:14:57 EDT" name="setup" finished-at="2023-07-10T12:15:08 EDT" duration-ms="10944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithInvalidcredentials()[pri:2, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:08 EDT" name="VerifylogingwithInvalidcredentials" finished-at="2023-07-10T12:15:09 EDT" duration-ms="879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithInvalidcredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:09 EDT" name="Closure" finished-at="2023-07-10T12:15:09 EDT" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:09 EDT" name="setup" finished-at="2023-07-10T12:15:20 EDT" duration-ms="10640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithInvalidEmailValidPassword()[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:20 EDT" name="VerifylogingwithInvalidEmailValidPassword" finished-at="2023-07-10T12:15:21 EDT" duration-ms="898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithInvalidEmailValidPassword -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:21 EDT" name="Closure" finished-at="2023-07-10T12:15:21 EDT" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:21 EDT" name="setup" finished-at="2023-07-10T12:15:32 EDT" duration-ms="10663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithValidEmailInvalidPassword()[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:32 EDT" name="VerifylogingwithValidEmailInvalidPassword" finished-at="2023-07-10T12:15:32 EDT" duration-ms="953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithValidEmailInvalidPassword -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:32 EDT" name="Closure" finished-at="2023-07-10T12:15:33 EDT" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:33 EDT" name="setup" finished-at="2023-07-10T12:15:42 EDT" duration-ms="9217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifylogingwithoutCredentials()[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:42 EDT" name="VerifylogingwithoutCredentials" finished-at="2023-07-10T12:15:43 EDT" duration-ms="886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifylogingwithoutCredentials -->
        <test-method is-config="true" signature="Closure()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7e07db1f]" started-at="2023-07-10T12:15:43 EDT" name="Closure" finished-at="2023-07-10T12:15:43 EDT" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closure -->
      </class> <!-- com.tutorialsninja.qa.testcases.LoginTest -->
    </test> <!-- Tutorials Ninja Test cases -->
  </suite> <!-- Tutorials Ninja Automation Suit -->
</testng-results>
